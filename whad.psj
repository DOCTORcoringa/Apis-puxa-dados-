import os
import sys
import time
import random
import subprocess
import json

# Variável global para controle do banner/slogan atualizado
use_updated_slogan = False

# Funções para gerenciar usuários e histórico
def carregar_usuarios():
    if os.path.exists("usuarios.json"):
        with open("usuarios.json", "r") as f:
            return json.load(f)
    return {}

def salvar_usuarios(usuarios):
    with open("usuarios.json", "w") as f:
        json.dump(usuarios, f, indent=4)

def obter_nome_usuario():
    usuarios = carregar_usuarios()
    while True:
        nome = input("Digite seu nome: ").strip()
        if nome:
            break
    if nome in usuarios:
        print(f"\n\033[92mSeja bem-vindo de volta, {nome}!\033[0m")
        ultima_opcao = usuarios[nome].get("ultima_opcao")
        if ultima_opcao:
            print(f"\033[93mSua última opção usada foi: {ultima_opcao}\033[0m\n")
    else:
        usuarios[nome] = {"ultima_opcao": None}
        salvar_usuarios(usuarios)
        print(f"\n\033[92mOlá {nome}, seja bem-vindo(a)!\033[0m\n")
    return nome, usuarios

def salvar_ultima_opcao(nome, opcao, usuarios):
    usuarios[nome]["ultima_opcao"] = opcao
    salvar_usuarios(usuarios)

# Demais funções do sistema e nomes principais
def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

def type_writer(text, speed=0.03, newline=True):
    for char in text:
        sys.stdout.write(char)
        sys.stdout.flush()
        time.sleep(speed)
    if newline:
        print()

def type_writer_lines(text, char_speed=0.02, line_pause=0.8):
    lines = text.strip().split('\n')
    for line in lines:
        type_writer(line, speed=char_speed, newline=True)
        time.sleep(line_pause)

def progress_bar(duration=3.0, length=30):
    start = time.time()
    while True:
        elapsed = time.time() - start
        percent = min(elapsed / duration, 1.0)
        filled = int(percent * length)
        bar = '█' * filled + '-' * (length - filled)
        sys.stdout.write(f'\r\033[92m[{bar}] {int(percent*100)}%\033[0m')
        sys.stdout.flush()
        if percent == 1.0:
            break
        time.sleep(0.1)
    print()

def print_banner_slogan():
    if use_updated_slogan:
        banner = r"""
╔═══╗──╔╗────╔╗─────────────
║╔═╗║──║║────║║─────────────
║║─╚╬══╣║╔══╦╝╠══╦═╗╔══╦═╗
║║─╔╣╔╗║║║╔╗╠╗║╔╗║╔╗╣╔╗║╔╝
║╚═╝║╚╝║╚╣╚╝║║║╚╝║║║║╚╝║║ 
╚═══╩══╩═╩══╩╩╩══╩╝╚╩═╗╠╝ 
────────────────────────╔═╝║ 
───── WhatsApp 2.0 ──────╚══╝
"""
        slogan_title = "Denúncia duas vezes mais rápido!"
        slogan_detail = "Aqui as denúncias duas vezes mais rápido!\n"
    else:
        banner = r"""
╔═══╗──╔╗────╔╗─────────────
║╔═╗║──║║────║║─────────────
║║─╚╬══╣║╔══╦╝╠══╦═╗╔══╦═╗
║║─╔╣╔╗║║║╔╗╠╗║╔╗║╔╗╣╔╗║╔╝
║╚═╝║╚╝║╚╣╚╝║║║╚╝║║║║╚╝║║ 
╚═══╩══╩═╩══╩╩╩══╩╝╚╩═╗╠╝ 
────────────────────────╔═╝║ 
─────── WhatsApp ────────╚══╝
"""
        slogan_title = "Denúncia em Alta Voltagem!"
        slogan_detail = "Protegendo sua voz, ligando o alerta!\n"

    print('\033[92m' + banner + '\033[0m')
    type_writer(f"\033[93m{slogan_title}\033[0m", 0.05)
    type_writer(f"\033[93m{slogan_detail}\033[0m", 0.05)

def update_system():
    global use_updated_slogan
    if use_updated_slogan:
        clear_screen()
        print_banner_slogan()
        type_writer("\033[92mSinto muito, mas pelo que vi o sistema já está atualizado.\033[0m", 0.05)
        type_writer("\033[92mPressione Enter para voltar ao menu.\033[0m")
        input()
        return
    clear_screen()
    type_writer("\033[92mSistema está atualizando... Aguarde um momento.\033[0m", 0.05)
    progress_bar(4)
    use_updated_slogan = True
    save_update_flag()
    clear_screen()
    print_banner_slogan()
    type_writer("\033[92mAtualização concluída! Slogan atualizado para WhatsApp 2.0.\033[0m", 0.05)
    type_writer("\033[92mPressione Enter para voltar ao menu.\033[0m")
    input()

def execute_option(key, options, user_name, usuarios):
    salvar_ultima_opcao(user_name, key, usuarios)  # Salva a opção selecionada
    
    if key == 'Q':
        clear_screen()
        print_banner_slogan()
        type_writer("\033[92mSaindo... Obrigado por usar!\033[0m", 0.05)
        sys.exit(0)
    elif key == 'U':
        update_system()
    elif key == 'S':
        show_system_info()
    elif key == 'C':  # Flood de Mensagens com mensagem personalizada
        target, mensagem, quantidade = get_flood_data()
        clear_screen()
        print_banner_slogan()
        type_writer(f"\033[92mIniciando Flood de Mensagens para {target}...\n\033[0m", 0.05)
        progress_bar(3.5)
        try:
            qtd = int(quantidade)
        except:
            qtd = 1
        for i in range(qtd):
            type_writer(f"\033[92m[{i+1}/{qtd}] Enviando para {target}: {mensagem}\033[0m", 0.01)
        type_writer(f"\n\033[92mFlood de mensagens concluído com sucesso no alvo {target}!\033[0m", 0.05)
        type_writer("\n\033[92mPressione Enter para voltar ao menu...\033[0m")
        input()
    elif key == 'J':  # Exfiltração de Dados (fake chat)
        clear_screen()
        type_writer("\033[92mInforme o número alvo para exfiltração:\033[0m", 0.05, False)
        numero = input(" ").strip()
        fake_chat_exfiltracao(numero)
    elif key == 'O':  # Engenharia Social explicação e direcionamento WhatsApp
        clear_screen()
        explicacao = (
            "Engenharia Social é uma técnica que envolve manipular pessoas\n"
            "para que revelem informações confidenciais,\n"
            "realizem ações específicas ou forneçam acesso a sistemas,\n"
            "explorando fraquezas humanas em vez de falhas técnicas.\n\n"
            "Ela começa pela construção de confiança,\n"
            "obtenção de informações públicas, contatos\n"
            "e aproveitamento de comportamentos naturais das pessoas.\n"
            "Pode ocorrer por telefone, email, redes sociais, pessoalmente, etc.\n\n"
            "Esta técnica é amplamente utilizada por hackers\n"
            "para obter acesso a contas, senhas e dados valiosos\n"
            "sem a necessidade de invasão tecnológica direta.\n\n"
            "Quer aprender mais e receber orientação direta? (S/N):"
        )
        type_writer_lines(f"\033[92m{explicacao}\033[0m", char_speed=0.02, line_pause=1)
        resposta = input(" ").strip().lower()
        while resposta not in ['s', 'n']:
            type_writer("\033[92mResposta inválida! Digite 'S' para Sim ou 'N' para Não:\033[0m", 0.02, False)
            resposta = input(" ").strip().lower()
        if resposta == 's':
            clear_screen()
            print_banner_slogan()
            type_writer("\033[92mAbrindo WhatsApp do criador para você...\033[0m", 0.05)
            os.system('am start -a android.intent.action.VIEW -d "https://wa.me/message/C7VWPEONV6IJL1"')
            type_writer("\n\033[92mPressione Enter para voltar ao menu.\033[0m", 0.05)
            input()
    else:
        clear_screen()
        print_banner_slogan()
        if key in options:
            action = options[key]
            target, quantity = get_target_and_quantity(action)
            type_writer(f"\033[92m{action} para {target} na quantidade {quantity} iniciado...\n\033[0m", 0.05)
            progress_bar(3.5)

            if key == 'E':  # Rastreamento IP
                ip = fake_ip()
                type_writer(f"\033[92mAlvo {target} localizado. IP aproximadamente: {ip}\033[0m", 0.05)
            elif key == 'G':  # Invasão conta social
                redes = ["WhatsApp", "Facebook", "Instagram", "Twitter", "Nenhuma rede social encontrada"]
                rede = random.choice(redes)
                type_writer(f"\033[92mO número {target} está integrado na rede social: {rede}\033[0m", 0.05)
            elif key == 'D':  # Ligação anônima
                type_writer(f"\033[92mLigações anônimas iniciadas para {target}, totalizando {quantity} chamadas.\033[0m", 0.05)
            elif key == 'B':  # Denunciar
                type_writer(f"\033[92mDenúncia registrada para {target} com sucesso.\033[0m", 0.05)
            else:
                type_writer(f"\033[92m{action} concluído com sucesso no alvo {target}!\033[0m", 0.05)

            type_writer("\n\033[92mPressione Enter para voltar ao menu...\033[0m")
            input()
        else:
            type_writer("\033[92mOpção inválida! Tente novamente.\033[0m", 0.05)
            time.sleep(1)

def main():
    global use_updated_slogan
    load_update_flag()  # Carrega estado salvo da atualização
    user_name, usuarios = obter_nome_usuario()
    options = {
        'A': "Enviar Spam em Massa",
        'B': "Denunciar Alvo",
        'C': "Flood de Mensagens",
        'D': "Ligação Anônima",
        'E': "Rastreamento de IP",
        'F': "Ataque de Força Bruta",
        'G': "Invasão de Conta Social",
        'H': "Phishing",
        'I': "Interceptar Comunicação",
        'J': "Exfiltração de Dados",
        'K': "Desfigurar Página Web",
        'L': "Keylogger Ativado",
        'M': "Controle de Botnet",
        'N': "Exploração de Vulnerabilidade",
        'O': "Engenharia Social",
        'S': "Sobre o Sistema",
        'U': "Atualizar Sistema",
        'Z': "Contato Criador WhatsApp",
        'Q': "Sair"
    }
    while True:
        clear_screen()
        print_banner_slogan()
        type_writer(f"\033[92mSeja bem-vindo, {user_name}!\n\033[0m", 0.05)
        print_menu_box(options)
        choice = input(" ").strip().upper()
        execute_option(choice, options, user_name, usuarios)

if __name__ == "__main__":
    if not is_python_installed():
        install_essential_tools()
    main()
w
